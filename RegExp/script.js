// [aoeiy];
// [a-zA-Z]

// [^a-zA-Z]
// \bm(e|a)n
// \band?
// \.
// a...e


// greedy repetition
// a.{4,6}e

// non-greedy repetition
// a.{4,6}?e

// a.{1,}?e

// a.+?e

// a.*?e

// \.$

// positive lookahead
//and(?= he)

// negative lookahead


// \bto\b(?! know)



// grops

// (\b\w+)@(\w+\.\w+\b)

// no remind group
// java(?:scrpt)?

// ? == {0,1}


// (?:(\w+):\/\/)?([^/]+)(.+)?



regexp = new RegExp("[^\\W]\\w  +", "gmi");

let str = document.body.innerHTML + "<body>"

let result = str.replace(/^\s+/gmi, "").replace(/<(.+)>/gmi, "");

result = result.match(/\w+/gmi)


let tag = "azc".match(/(a)(?<first>z)?(c)?/);

// console.log(tag.groups?.first);

// console.log(`He said: "She's the one!".`.match(/([?<first>'"])(.*?)\k<first>/g));


// альтернация логическое или |
// x(?=y) найти x за которым следует y

// негативая альтернация 
// x(?!y) найти x за которым не следует y

// Позитивная ретроспективная проверка 
// (?<=y)x найти x который следует за y

// негативая ретроспективная проверка
// (?<!y)x найти x который не следует за y

// (.|kr)

// флаг y
// проверяет количество символов

// let string = "let param = value";
// let reg = /\w+/y;

// reg.lastIndex = 3
// console.log(reg.exec(string));

// reg.lastIndex = 4
// console.log(reg.exec(string));


// . - любой одиночный символ
// [ ] - любой из них, диапазоны
// $ - конец строки
// ^ - начало строки
// \ - экранирование
// \d - любую цифру
// \D - все что угодно, кроме цифр
// \s - пробелы 
// \S - все кроме пробелов
// \w - буква
// \W - все кроме букв
// \b - граница слова
// \B - не границ

// Квантификация
// n{4} - искать n подряд 4 раза
// n{4,6} - искать n от 4 до 6
// * от нуля и выше
// + от 1 и выше
// ? - нуль или 1 раз

// к ленивым добавляется ?


// \d{4}\ \d{4}\ \d{4}\ \d{4}

// \d{4}\s\d{4}\s\d{4}\s\d{4}

// \d{4}[ |-]\d{4}[ |-]\d{4}[ |-]\d{4}

// \d{4}(\s|-)\d{4}(\s|-)\d{4}(\s|-)\d{4}(\s|-)


// ^(\+|\d)(\d|\(|\)|\-){9,15}$
// ^(\+|\d)(\d|\(|\)|\-|\s){9,17}$


// >+.+<


// [\d|\w|\.]+@[\d|\w]+\.[\d|\w]+

// <(([a-z]+)\s*([^>]*))>

// (?:) исключить скобочную группу из запоминания

// [\w\d]{2}([:-])([\w\d]{2}\1){4}[\w\d]{2}

// ([:-])
// \1
// что выпадет из ([:-]) то и поставится везде где \1

// (?<name>) именованная скобочная группа
// \k<name> вызов именованной группы

// $& все что нашел
// $` все что до совпадения
// $' все что после совпадения

// $1 $n - обратная ссылка в шаблоне

// номер найденного элемента (их можно менять местами)

// $<name> также и именованные группы

// replace может принимать функцию

// Проверка
// \d+\b(?=\srubles)
// N(?=) найдет N если за ним следует (?=)
// N(?!) найдет N если за ним не следует (?!)

// (?<=)N найти N если перед ним стоит (?<=)
// (?<!)N найти N если перед ним не стоит (?<!)


// \b(?=[A-Z\d]*?[a-z])(?=[a-z\d]*?[A-Z])(?=[a-zA-Z]*?\d)\S{8,16}\b
// \b(?=\S*?[a-z])(?=\S*?[A-Z])(?=\S*?\d)\S{8,16}\b

// 2iduawad@#wdA21d

// необязательно спереди 0 - до конца не пробелы и буквы
// необязательно спереди 0 - до конца не пробелы и Заглавные буквы
// необязательно спереди 0 - до конца не пробелы и цифры
// 			